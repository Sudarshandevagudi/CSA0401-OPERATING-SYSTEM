#include <stdio.h>
#include <stdlib.h>

#define MAX 200

void findAvgTime(int processes[], int n, int bt[])
{
    int i, j, total_waiting_time = 0, total_turnaround_time = 0;

    // Calculate waiting time for each process
    int wt[n];
    wt[0] = 0;
    for (i = 1; i < n; i++)
    {
        wt[i] = bt[i - 1] + wt[i - 1];
    }

    // Calculate turnaround time for each process
    int tat[n];
    for (i = 0; i < n; i++)
    {
        tat[i] = bt[i] + wt[i];
    }

    // Calculate total waiting time and turnaround time
    for (i = 0; i < n; i++)
    {
        total_waiting_time += wt[i];
        total_turnaround_time += tat[i];
    }

    // Print waiting time for each process
    printf("Processes   Waiting Time   Turnaround Time\n");
    for (i = 0; i < n; i++)
    {
        printf("   %d \t\t %d \t\t %d\n", i, wt[i], tat[i]);
    }

    // Print average waiting time and average turnaround time
    printf("\nAverage Waiting Time is %f\n", (float) total_waiting_time / (float) n);
    printf("Average Turnaround Time is %f\n", (float) total_turnaround_time / (float) n);
}

int main()
{
    int processes[] = {0, 1, 2};
    int n = sizeof processes / sizeof processes[0];
    int burst_time[] = {2, 4, 8};

    // Find average waiting time and average turnaround time
    findAvgTime(processes, n, burst_time);

    return 0;
}
